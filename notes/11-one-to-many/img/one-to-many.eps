%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 726.000000 892.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.14.3 (Build 18D109) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 726 892
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 726 892
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: FuraMonoNerdFontComplete-Bold
%!FontType1-1.0: FuraMonoNerdFontComplete-Bold 003.111;Nerd Fonts 2.0.0%%CreationDate: 2/19/19% Copyright 2019 Apple Inc. and its licensors, all rights reserved.11 dict begin/FontInfo 9 dict dup begin/version (003.111;Nerd Fonts 2.0.0) readonly def/FullName (Fura Mono Bold Nerd Font Complete) readonly def/FamilyName (FuraMono Nerd Font) readonly def/Weight (SnapShot) readonly def/isFixedPitch false def/UnderlinePosition -75 def/UnderlineThickness 50 defend readonly def/FontName /FuraMonoNerdFontComplete-Bold def/PaintType 0 def/FontType 1 def/FontMatrix [0.0010 0 0 0.0010 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 33 /a putdup 34 /r putdup 35 /t putdup 36 /i putdup 37 /c putdup 38 /l putdup 39 /e putdup 40 /s putdup 41 /o putdup 42 /m putdup 43 /n putreadonly def/FontBBox {-482 -500 1530 1064} readonly defcurrentdict endcurrentfile eexecD9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF89059868F63F93207640A6BD5DA214789139C491E02A37BF3866F2964E8D690D48D9F6C4A5EC22355F8123573812483E06B968AE84B5F20A982A0E6576475351697AB8C6EA040355C5542F297D7A3AF28AB93EA0771E0D56DBF00F7CA9CE9FB9FC2E0ECB00D04D5F5F3F24B987B546D6274971A477DEE12C44623C180BCDBA21172627610C4736632D1A4693E79719C3BC43DF5330790A52DCD4CF455ACC213F6B1C4BA249179DB360225568161552A16682E3A3604BFC39D571B1F8F18375BEF1E80C47653960E70B9202C7599D6550341FC928290F4593A1AE07708C5B7AFC05B72872B36324FB88FEE7B0D15944AF0EFCB93EE287282949B7A4313D9740F62D9B5164E11060ED286A774590DBF35862A971611CE76AA8C148D7446F1AB325FB2E9ED9E356F494B57F15E4D1A99B9BB5288A4F5C38543664619E81F245F42617000F1CF83AC9CEF4BF5BB61EB2CD228DFB5D4EC9B8CDB9D13098586A4CA009B6601F4E4829CC949F9FA0F06372DAC664DA4D1F729C9E3A721EA111C51F26ADB08F54104A4F67CCBE6C569E49805AEBCC14C8220A68F46EF408519922DE507C34368C789A4D4B86586AC87502597A889378309B7ACB674D367382C26C35C15A39B3C424490BB509579E0752EF045242991C9A456A8F98899CD982A62438EDC4ECD5238651DD2D57C9894A4D52FE54F1C7C76E69A0A85FEFD9C183BA693766F8211F963879B14536B14F2463F97C4DBAC49889CDB8F6E36593C305D6AD6A8ED7DDD3ABFBBBCFF59AE54531B162A91FF43135FC8D6D9F00608FEB685202B7274280A159F9C4775E053ACA013F3458FFABBC612FE8B6FF451184C37A9E0DCEB37B614F83A767EED1C92CFB9828252B9CDF7428D95CB4391B19D4299091CABB59478151D5C467D50A6969C85015F97A4268E2C78057E606C8BD7233F11A0A5D90780D0FA5080C594246301060DA14ADD815D93894547DE4294A3828429B2002A4B691CFE1A6F1E7F490FACD41A8301F7459982494978516EEC3DCDE6581DB0F85284416683247C7FB5FB2ADDDD1F60014110C8706AFAA9F0B4741F8D3FFDABA7D23608D2D35D6131BBDD4A6918F5130D4518BFDCA25A4FDF1884B3FFC7C992F95751113F31168FD091331181419DF7AB896FEDF70102368D530D06FC7B1EBA5C7B8D93D86A0974BD4702046D36443F1113F5F50F787403756D00CBF0E2A60D7AB956D82056F6F835A5AFF035D1DBED87BA9276B4EF10A518E12C5E472D46A7CDD64B2C10295AC8052E313A3B2D625635B658106CE2429D8FB0F602C0762277425D5F2EEB9E1B9FEDFEF5D8719874E74C3FBA7824135EFD7CF7A37940ACDE29DB448DD553DC4C8DFA238EE149D452AC319F491364221E7FC625931CFCD58634A3A16D1D2434FFF4C2975F50ECAB4BEB16238E0A2B224C865925F25F9D515499414474FA1823C924433A0EC4DD1ACC3C2292C9E8A899053A57A4A4B798E89AB9719903A99639761A9AE067CC2A236070CF7B588A2AE7F4D3E86FD5F4A983448351B49A155EC83E951BF5BE510AA1DD83361F5C846D09B03748D6FE03E71A4C99F47807CCED88E0DA3C7833BDC80A99D9F482826FCC3E06BC1047122539A94983419DEE5F141CF27A6A2760D31653927D05CFA110BE04682FAC85B9BFFE20419D489F6AD2057F1D4940A6A6355CB2BD91073E01BCB6BC806D307952CF111970C3D2F5C6B06B5CBF3030117344CEAB4A7AF4A26F4D4BEB002C6F01E042407D67283613977298C80B3F9E6B7274310A1EABBFCB951CF0F985895DDE219A50B4DDA211E8663D6F6C1B225F7D7E5502A96883F98AE915B808799C8DF7C8125250B3CC2B70C0D8ADD1263BD992124D420269DE8B3C5293C136121CD768A54174D0D7F7D41070C0E855C95C5CD3406140323A57A15E60A38E2D80B90ED2CC29DD0011B3E140F282943845500A01D37FC89696F25C20205E7BBC65CC8C1C6A714562B2D1B23AA32924F0CC92DD648F9920BE67BDEE031F38F064BF5BCE61391F943FF15F05D83E3FAE2381387D8F0B024FCBC542B2D833E1D70ECC73CF5E1E225F35BD5A7BD87806BC4590A9F7780AE4346324BB63C9A7FF75B51F70A4699B7D718A769EF8EC3241DD25D9622237BF94F5B5C1202BEC8047907EFC91F9BC2C295BB6BDE3CB3FA9E083F51481BA0F02ED13E2B29FFED0B59C944C8134E3B423C80C98590078250F12D5208A60E54E76A6CBACF2BFA4F6251B1E3EF562830EE9F78DA55B1E908F3F8708BFCFD7A54AA9737382FA2FA83242885A99FAE4F2E9804089DF3089581BF0CDE0B5AAB83E00723BC3BCD62AFBE9FE841689F6A2A89A12D5348BBC43986C392F4E872191023BF2C28BF1954034155F6F5476E70836770EFC7D07FF4766A71BC5585A20F818C391522689085C3737B1C3F80465A8F0BF29F116D3D86F39D245F75394FF6EB92AB85E28F8402473A5427C328356A8148A58A4E76F3AA6882D5B7D6B025783FDF2855B170E0DA22A859C3FAB803EE3A973DA8173717192A4BDB9CEBE89E1B680C6E20678D757F7160AF8AE15DCFC2CAE9403EEE96C5FCFC5D590A4F3250C89955AC513D234D6B71C668DE64AFF711FED56FB86FE3496459BB304D8B7A4D16AB443006D1142C3A2B66D41C16F2069CEE3210F0217A9F27B5D6985226F24C6EE7EE9DDE8294E8A32F399B63E65FDA6031EBC5A530C01C0D69E4B13B7826A46F1E1FF5D7CEDE62E21B0321357B1CA5B9AF5E6271B8B47E52180D3F13EF3E7CB176E7419A336CCAC82084FD30A4793F4707D9F883358CAE4CEA7801C2B2C2C9ED676B0CD4833D28E6EBD0F9AD399B7BDBBDEF2754A55B41D5B9C4281A1F735D8779537739B00CFFC07B770DFC0B69C6346571BB86F1B798B3F0502161EB9F2DB94E23E86550A0053A89BF29AEA046D9995243412EE8C3A1FB29405E77F1D9ED34755A6D322924CD0BF3BDB37C5A1C60164325009BDFA5B65224CC04F24D6611CE763664C2A187A95F0C7FD4049886662EFDD4106CB339E77C2F57552CEECCB73AE5091BBDD023C90758F3FA251FEC4AA717F8096FBE9F1E3789416105CDA17F4AC197F44C45ADBAE15E453DD49E97368FC145FE5CF2174FAD6C53B75375C404768B7660426132C3F25B91E87CFDB19D3C5C5C221437CB32658D5FAEA5EB4863E195DD5076F548862405BA0E29DB182E6F8FCB96DCCFC8C810C0DFB5D722EF7D6132C9D8D5EA67F75D33BA54B65A49EC9C72DA5E139E992F5E2AC87B911EEBB7AE294D4B64585FE33258E26C309329CC70129007E73797BBB7EE5A5D755E4A26FC4DC9D9009111BAFB2D2A76A5EBDE5B566E1768E9048DFA26B22DFAC96D6197E9F7539C6C7CC90A5A8B9ED2ABB4400BF9EE523F816F45D9C7580DD69C9EB6D4278106023A4105B40E87C8EC026B68F9D56A622E568D2F984B86EEA2E9AE73C099C5DA57AB118D670C0BE030896F1C4EE88CE0E57F23935C994B75E7AFFF6937079CC5197C3FD5BDF100F9B5A78BDDE84C7DEDAF8B9E738D1000285FBC94E7AF62A19CC5CF52999267650E20B103265B7EB6CA7123C49AFB2707BA579611E2D489A93295CEF77359FA05300B3C2E30D3E421F02DE08E13E88FD2B89D150C01C0D0433291426D2E3CE729D9D5EA50B76FE20C70717F7CE3E2F26C83711370C1CF0ED61014FF45B0A572B5A910397D42C1D6A305299545952FF8AB117BFF8E2BC2E52E7FFDF6CB64D6184D0D141A415C438ED138670FE3082CDAA0282850FBBCB8A0A9CAE35CC3991AA9FBE225251C0E9EF2D9C395F3571D07E162EEDBA86C78A7DC0AFE087FF135C6E26D163243F5C95A4FD920E1F6E026930885A1B8122D4748C6F2A0A7AD995E8E25647DCCBB2F9C9116599566253AA2C9F3CC2736C8AA0A593B168DDE8D22C052073A590FE69367DA4AB300EDB7900AC77A61A6942CE812C777D775C56E00C1BBF6B75F5384D51B68404172824D89DAC0AA386D31324457060009B0383B3DA02C9C208EC382FC7047EA154F5E622F4E3A3601015F87E09EF4F1A9FD9A6D76ED4A0C3C9B0AC3E0E76EA9B79BF974A1BBA6B4FC2D2D093A0EFEA9EE24B943120139163DDF76C174AF49548DA7122BC56AC4DE968AACB2FB1123DED3B733C25D075545A7840C2E9F131A341A3CCC13A1CFC2ABCC5FC50F9E05B08ED4E4D6B502D8D4338373A40C5DCF864D310C85C10D68B293A7F94F386762ABA15A28840724FCC6976F9E0751F24F5A4A305B28D775A484231F974B458BDB2FADD6B514BD363709DA274CA7B3747FCBAC2A651D15620FCF28012D2AAF7E6E7C3CD901B7C9F3F3F4FF48B18D026086FAA14E35933922FFAAA54227B1970994E7E648DC35C82C5DBAB54D336FF37D2BBAB0B0B99A74DA785DC1FBE62DAF4BAE158A822D8EB487228F71258DBD6674A692DC4A1CAE3380230FDB7797151BC4BA7388D14D199C8C6BDBD48C238351F2349179CE63A8684A374CDBAE9A4BC95C85321F6F4EC579732A22FBA634E59697955916113C93C1CE9D38AA86C42A05E2D54548CCC49D87A0183C348CEDC9029A6889B299C9E02E99BB404F366F5A6116D483E31673F470599EC43A03EA7637AD65A77202BDA4C22A4A8F74061110A7C7186C54A21B20DADD0D8A57D8FF571BE669C35CCDEE2914C84763F3F3251A70A5599B1C2EA920B1DE5CDFBFB652F688EF16311AAC3EFE5D83A7F5B44507BE88751BF81178EFC0C962D00094C4253B09D548A0D1362BEDF286B26A109D55B114CAFF794367BB8FB6392E20664C06B185A8F78CAB19D13A44E4F08EDA31550BD0B0FF0165D2938F24DDBD21EA2D8C4715318CA5F4C8A6676751F990C360AD1617DFE9B4803EF318CE94EC1A9FAD41B2A08CC6327865CA8B51FAEF87CFDD7FC94416DE6CC72A4C8159B61F7179517CFF816A52ADA76938A5E490AA8F3A5B05DE7E6BD885BE67B846496A06A464C35DBDF3C5E8ED5263904E67FC92345CBD67B92FB1DD28B0254B353C07987741AACC362957A15EAE4826595AF5117E7E20B23A9F79CDA8D4049DC26CBCD53CD752225912D6D62758E6CF69A2C3DA22558194DEBF6E98B9F39323418F02EEDE6F9060FE0B4C72E34912426400B4F5D7D8C39D192EFDEE2BD875FD9764EEEE7B059B594671761A0CC2C6B6D75C2C867DBF4C7A7DC71299DBFFF742C71994C2D0040D54BE8F4A0FE15DEA7D899A4F09D3043792AA4AD98243EE37145C8CEE8CDFAD5C222E507A723EB7144BF098E3D91C92D8E1574C2ACF5C07C8EEB869A0E669C16B998B883E2183561E7187613B4AF04CE81A343251350DD16EE0CB7AA46F86A70A26CE8C4B65F13BD434FFDF33F22165F7A3C125F8E6370BEABD7AB28F6CA160DDAD47F6941D1E07AA7E101AF935107274537FED9D6F08676C1C353C029B325DD837D46A31E1039F15A36F5A1F02C9031EABD655DD3C595D8A49BFD9CB5102609AFE139685BA66354EB196B2F2171E706116680AAC649521DC7FDE59D654E23EBD125ACC094E93F7CB19AA47933683BB29D41AF9791C1E599157A003A0E576F3BBAFF023BBD58FF7A1DBE74928B045993CD364B93968DDE02578885386CF91CED17356477C70B5656D7DFA7217EDE9A69CF1C24BD99A2DE1B1A55A4E5CD32587C702593F0C9CCBE0CA1D046DA87ED45F1FC6DD2FBD14310BD77D2F8F32AB8DA1B6A3B0A89C86B1E8F19A63B4550EB34EAB70F9C15D3E0BEFBA8FB48EA831E95B056B5B9B863C4D652C2C96679A73AE3122429CFBFB4EE720BE882034F0F5ADD4D4ACC006AAC6CE8B2CF0FBC2E5F40D7AE8BFE11101D55BB9A945FCD84FB17D7BE54178869775A7E0AA7A29CDEF17D46A5B62A485E971B361AE53A9A43188F2A5F9ED82082374D023C2702C48FAC1B37EF117BD5ABC896D73330CDB686091A3C6D242E2BAB5648A4DE14BB83AB316827A6BEEAC682854D4CE736C142F4168B7FB906539BCB13BA4B4E8802A2EE129BD7CDEC5414EBA26DCC773237E418FF6382B5FBB83DC7C8AEB74ED18C7D1243093FA55A2D33E313EE484E83847AA44EE53634597A616D74A4F5E14F866B85F94205B97CDDD014C15239D0658FA7F2E6FD549CAED61C2EB30D30B49F93CA786F53E20BAC9D55CC932A8A69D5F86BEEC438B50216B354ADC55F01FDD83467943133648409F142651D86DC0AE8A5796AE0801A9564AD92FBC09C9C6AB3299690E3047CCB86DBB0188B84378DB24479038CA89B0FAEAB30B69DCBD659221022FF62A897DA826F9A741022A5A3586917ABB531D97D7871DD54AD626F1361499E64E9710E1EA7BA9353336F85130EB1671D05B5E92763CB73CD72BB16A88F5CAB95398F5EC28F6530B8A2F69284C1758C579D56B10E39F99D34AB27F3D30BCD7D7487DC716533A903ACC1E0E1DB56D9958C356DB8D2009DA5AEBF378812438FBCAE5000B3EFB112C6747B5250AE030C86359A4AC5F4290196064BF8378B8F3950935C2A9ECBD8F8E85B4A923A2EC1C01E73A0521B2DA64662AE809CECD676D2C9F048AFF643018156879DC0E15B7F7FC439996F49DE9712F564E4A600B859CAA735EC8D4873BAABEC632C9F8919A29A3A659DFF24CEBB21AF9A756B0D882117450A97D536BE36BA7DD44C8BC806417AE3D14C5A6D6B6D65B46C6DA43B2D994F1D155DB00D5FC22C7B256344D13C110B9933273B1E00F74D748C4AEFAECF9649FD780487C343F93350A6DD0864526940F528CAEE023811C2E268F69D8C421F4B71F8C1989E0F6832237A9B1AADB452C60B0880C91EF963D70650458C570973351F2F7F283473E2DAEBCB1DA1D07BDA24A50DB330F90057448A24E44C8D733C2D45D9FDC814CD288F5E05F1951752703F402F711FACEA8C193666A22D1F434AF30138382B03B8A2D03E201D3C2C211047852E4C9D56BFFB07B7E41285521ADA8BACA5FC15FC2685181DE751FFD2B407ABC83F440BA9D6CF1EB36FEBD71F106DC85F2A418DDDE3681AE30D581D7BCF2C7C00872BC3E9DA3911B7015BD8CF05D3292DA2F34C7928E6189F14366959B28E13E57952C1176455417A4288CDA3B3CF6EF5A2C52F40F300335ED4ADBE649EC4D361969CD4438DC740A7B0C2326E2003C751B1E8F39935BD93239D2DC188D471633C2796A69FC46EB242BEFBED8FA766D51F5326E422E0A0A91E099080A28545FC83B169F8F78300B06DF1B447BF316FC35FB8702B7C28542A589F4D297CCD398AEEC5AE2E28BCCDED26912F2A92161CB69BA5CAD0AC4FDDF969D2F643219F0FB4FFAD77291932537D766E50A897B64CB216F2527B8F7C83AA831755AF1ECD614230DB004FACE2AC6D8CB2D4D42D30A0F36D479CF5E2A69BEBBF9AAFADB4E33ACA79DA98E411E456A8F201C49D2036C6C40606CEF293154E3C2EED1F279D623CE2C5A6044AF5F94883E11F21C6C33713724554E7AE50936B7BCB85676CB3A531CA2FB522CB11FCF5BBA0CD1AE6A969DC9BA7797E428171B16168F237F0B8651B99858BDA1AE846472FC8BE5D0AC562332B020B5960933F1ECA3C08D689635A18FEFC2E1356D72ECFA2F28E48A9ACCF079129B367AFBBDD1AB24621819239F33421902FFEB2D12ACED673BF403685F4D91839D2EC4DCF3DA411D8606B41216C095A9FA6990B5F027DC8460AB769DAC69D258F8AE1152A5956C034C82A0AE860A718029A3D9346FD96A3C55C11BB4D7C550232199737469607AEF8D5FB0371A5D4586BD2859CD29D0DC8232D389B008DCC00B2068BACB5F51AB8ABD8E0A7C464B6CE016743A719BB2457FFEAD688B923B5E547BD8186D7477392AC3A830B5E546B3D6C19C8FB300DAD7313D191B8F106C4B37F4D10D4E9D05FE00E4774F03950FD2078C9F44193F8757E22174321500EA9692B3E94E25C49F903D82B1007E79FFE0044CA441D6E4756EEF57CA3C85273562DF78213E22C518F37DE1304D1F2D88901045E521A3A005F482E5656C5A0F4A28E2A7DA9C76CF57290BD1D1615C24C1CBD41DD9EAB4BAECFACD56C2072E738C4ECCA97DE8E4BE22E995A2D9214CCA82541D2388170B21BCC740FE35057B1ED9EA5CD341F80899262E4C10EECCC80DDA4E4A2F30D7AF46ED420576EB764BDA8A2B9534963FE6158EA148D8649DEBBFD7A98C68EB73E7A42100F4170E359FE18A9298261376E8E2385D12495731ECF2ADCF9FF0D38170F43D9017194E6F439C2C924526101919974F06F37531496E4470B0988AA5E776BABF2C82CAEA2293B38822AE8D4C1D5786D0E7319FF3210239F8B7FA8B69D558ED24E4E5125B232216D2A7F84CF6E8A0BC540ABA53E831BFC8123A829533FB0065C5DD170F0B6184FA6F4F55938D8F893118B96ABEB40181E42856CAB73A2F2ACED522F3AC936CD1EB83F686698E3A87A913F344959BAE4CB57E67F4BBA9CE95AA705906E04B58E721A3B45F5314F648AAFD00DE61BF69669EA6C55C5FB2CA5F1A8787931F61A70DA55F7B322D3430357D260B3C20A0CEFD86311D8433E66EFB7940DDF0499EC979861EDDC23ABE73DF99F0AF8CA51A1FBF6117CA10C26826C6928E2B11EC1CC75002E7586A221C7211F5F52F317B80091A271E2FA1BFB91FBE1AD7B72A030A326455950331A8435356AC67D3C0DC808C2AA164A2D6F03F6F97CEDC290AF2CBBCA8470EC08FC64DA8BCA19C632A781D0D7D7B73569A5CFA8AB73D8BBD2EBAF4EF6775C0967537D59C726CBD53B1A74710E6BA783CF0CDD42567FEBE24DE8A74DEF7AC3BAD7894EA2652F194E850EBA4B3423827E9634472D09F0C236488F0C54EA1881934C00F4980D6458BFDB7CB439469D78F413C71BA117E1557284D05F4E10FE412D556E9F52E64F692F158F80C2F33A8CB74F98795749DE04A7EF81F6212DA66A3A00C3E5907B0B21D2E984B2954BF862A6788872ACDC45567B5E1ABEF28C4E28CBE5C1E108B929523E51D8672D6AB6D2CA5C5DC965010779B9D232F2BBA41ADEDB90EF968C9297217CB2E065C798461798627578D9E834CC467284A1AA0DF8DD1034FB2AE2A2E05FE448E4960F2088E02CF913F7833907246EE39DB4B63760447C102655E59A5E5F2499C2B3E789918FCC37040DD4F7BB8A2E84ADA1B0CB965D94C8DDEA07B3C3690E30CDB6CD7F1205323E69D02E9ED6EBC2FC2AFFBE85506EE65C717DD1D74301E1F6C10815DE9331B90E38EEA8ABD961714C2A1BF6A1A8514F1C97B5908AE38E0B08C3381D2BBAB9B7A3EF140B51B9508758F4EB2D40D626B26A5966B795ECB76C328A1F8163958B269320E6AE74C63543FEB7FBD7AE7ED8ACA4B3A480450D61F743DC3F0E8501BBDEB111BC66BB4B0071931554403AFBD541DB9EA01A2C894C13F51785DBA15B4B2BE86525369AE9C84714C383C96993C3C54DE5F9FF5608F172A82F6C2C8F230148C47B12D3C39D240F662BB23D7784E3B0DD8BA85D7069E0106D93ABA431EDB127B600DE308BFB7735B286AE40CE0153AC91F32D6D1C026B73831B498E6451E2FED277E1C66BB75483F0846659FBB130A428208996599286F61221080C6CF9566E8814ACD225C6DC9F682F889B509BC10458861250EAADF52A9CEC2CBDBDC9CD4944EDE647727635A66A69E54FB51AD62D34E4E0111D5034471ACE957E825767AB7BBAD7634A647ACDFCC05BF76712DCA3AC9FE46D1C89AF636A3879BBF709CCBE819561E51895D45E9912F8FABF6FE0D4AE26385ABF6CC8AA9F168DDD2673EB731E8BB829A568B1C37D0DF16CDAB3945BF5E3F083A04878526A7E38313E5549EC349889F0E7DC7BC284C2969C710620951EC09A9254721961710C6728A919EB30D404AB848A64E31427CF18F1D1EDC6F4C08EF4F27D33B373CCA5894EFEDE2E2328812FD0CEA3BB03735B93058D59AA4A82722DDEABB42B5D8AE97CE6DFE7532F50BDD0E806C78DD3D3362286A727774197E0C33BB6F77980931EF604782CA7933BFB1B95BCACAE3E0170B7465BC51A5CC78BE7AF988787FF5FFD4732654095B02138C8573DDD2767686651CB28D594D46F971E2F7F1F0BCB921206E20AF25421FB49D75D13D5CD33E7F7DC0E3A6982EF05469BEECAE2AEC31C974C15D99DCE56B1C01B29F7B8392A71C1AB527AD068AB11F06A57E1B4A6378DFD92387CAD6D29136BAFB7DF0A15715177C4ADCB2A8D0EAC7F82E68DB7DBDA375447A483299AF79BDBDD7708065B6621A59D7BDC0D1EC9DA0BD3D2D4A76D2C3E64C7A7BC976B448938B90E25B86F1BD2C12A07D9DFDBBEAC96C282EAC68A8D18AF182C438FF5E21BEA084062C5E097FACC59A4FA50B834CFB8A8E6779CAFD2884BF92BDD852F71A79790E5727C3EFC7822A1D8AB994D516C85C2B4C4A375BF37F4FA4AB5B1FEDD0E40923EB37FFE9625505B0047E5622E1C41519C94A46E6A26246A23E5D1BC547DF5696278A2FE9F3A3F0DE0F0D7427E89BF80A98FB289A892F1D66C96E29ACB8C6F485FE559559F1E4641C82FFB1471F58BB68223F374B4EE39E0E5CDD8725602D5081404E3CEBEE84B0CEE631C0AEA9E09ED3624794C8C928512D36C8CD6F8C791223078422D5178504005BF19411A789571679F32DE3AED1819D2630E2DC0F891F5B23FB14EAD66185A5154004877ED25D6D65C7E6165DCB38A852FAE40D13A2DD3029323CDEC5A77C08CBCCDADDF80D37D7AFCA2644F04B966F9008A58C68208151AC5F13290ACADB08C04EFF17129E02B2A64F2F989A6D72DEDFFFDDD1AA32CA2789438D901D81B28C1464CCF94F157A6B100E434A7DEF475C4BFE27D82CAF1FE2BDE4829969B4FE65A2624F14B483F3E38E9B66CEDF0199B7C8C79C9A12AFAD7AB23E3157FDC8513A8CF8F274AA801C982347C87D9E68814A2FEADD3C06FDF33C6B23BAAA38700327ED5C92E8086070C87716FFB0CBFED88DB25A92E0E2CD2F0498A88DE81155839EA08C28DB3F559469A98A90C1E1D73AF8BEBCCA6AC8872365B99A0276D62D440C9F57BB9FAB2AEB8755CBE5B76F59936D00C366A068DC8CAA871EA6950A185C5A494A71AD1019CAEB042CFD9060C2CCF7CA4D485E0BF4B056EB0D84C7A885E28F6D13E0C728C5203F4AF95E5E2E135DA8B5324DC255FC7032AA5A9863DC5BEAA4E7181E5700E431DFFF0E83BCDDB7930B2F95837966F0701757FDF39EE0F499E1FE8CDE8688A1C43E1B26281CC064356735CDB3D6EABA071D6CF33F52DC4F1386ED57A1AAA08A481C2A69B6F693E8256C7EE4F9F0EBBEF2A7B7FA84FDFA14C0D4369C2EA105E9816F2C2C4111A69571E528421CAE4AD66A73C407C0103C7B75F171DC9C97D4CC34CC64CD7B92DEC4C4F00DD9F003D9606314E9CB6656EAA1771BA1B90A0DDC8513D2165C4905B5E6583EF27BBC176CEE1FBAE9C8904E965F8523BEB29A06E43E9DF88507147262586BE987A45637429CA830EBB9B26F77115261C05E4B33F8ED93B40BBCC5EFBE76E2A4516DDADE8544E591D829168EC482E17FC26673E7765C78AA7B1327564C1AB4B17615AEB1BEFF0B9FBCECD82AC07A2D7AF1BD3791D983BAD20D7795AF97E290967FFF689B3F9899934DB04DBFBB44BCD751755A98E7F9CBAA0ECB76C50526FEE470413485560B1F9EDE700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark%RBIEndFontSubset
/FuraMonoNerdFontComplete-Bold cguidfix
/F1.1/FuraMonoNerdFontComplete-Bold renmfont
%RBIBeginFontSubset: FuraMonoNerdFontComplete-Regular
%!FontType1-1.0: FuraMonoNerdFontComplete-Regular 003.111;Nerd Fonts 2.0.0%%CreationDate: 2/19/19% Copyright 2019 Apple Inc. and its licensors, all rights reserved.11 dict begin/FontInfo 9 dict dup begin/version (003.111;Nerd Fonts 2.0.0) readonly def/FullName (Fura Mono Regular Nerd Font Complete) readonly def/FamilyName (FuraMono Nerd Font) readonly def/Weight (SnapShot) readonly def/isFixedPitch false def/UnderlinePosition -75 def/UnderlineThickness 50 defend readonly def/FontName /FuraMonoNerdFontComplete-Regular def/PaintType 0 def/FontType 1 def/FontMatrix [0.0010 0 0 0.0010 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 33 /i putdup 34 /d putdup 35 /colon putdup 36 /space putdup 37 /one putdup 38 /t putdup 39 /l putdup 40 /e putdup 41 /a putdup 42 /r putdup 43 /c putdup 44 /o putdup 45 /m putdup 46 /n putdup 47 /underscore putdup 48 /two putreadonly def/FontBBox {-282 -500 1530 1064} readonly defcurrentdict endcurrentfile eexecD9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF89059868F63F93207640A6BD5DA214789139C491E02A37BF3866F2964E8D690D48D9F6C4A5EC22355F8123573812483E06B968AE84B5F20A982A0E6576475351697AB8C6EA040355C5542F297D7A3AF28AB93EA0771E0D56DBF00F7CA9CE9FB9FC2E0ECB00D04D5F5F3F24B987B546D6274971A477DEE12C44623C180BCDBA21172627610C4736632D1A4693E79719C3BC43DF5330790A52DCD4CF455ACC213F6B1C4BA249179DB360225568161552A16682E3A3604BFC39D571B1F8F18375BECF006B8420504422DB9991594960183DF3AE9346C24318100ABF720D57EF992CFE0D2EF20D11700F29F3B11E1D93AC1C45CE151DD4C5F8D5F567BE9615F923E685B2AFB5593926601AAA0F8E29290A7C923538A846C0A34EE62BA65BA007EF712C323F752525A53E2C8DDF44D919E4CC7DF408BB460A7F877752BCF471BE1BC3B0CEC0DB8F5879D524547E7687F57DA6693F118812F0D1F50D9AE2B715A3D9C156B60E162FDC28AB0C11C56365AE27CCE47B761C2D76F6CB7C57B1DEC4655476202D1388D11CBBF65EA678346DC4059D91750566F58DE7D8B28FEF090304C0FCA5B28C6FEED6E88DDB7B1FE2E113C7352C8ABDD0A5C5534DA45AFF180878B8B1F2DA51FC50754D096F3D59E3B194F375CDE8DF386A1DB1ED9EFD6BD45D7526B7531093A51EE0EE249E97A2BF330A1A3F7B87E46CAEF35334C903DA8E1CF0496FACC88CA33F81AEF232261AF2D97FCD3276DA33531230EB59C473E033A6100EFEE33B179FB17D549C0088A1933A415C8FB9C8F94707E73E8AAEE45FEF84CBE0F29F72443049AAF8CFE23CFE030F97B16701AC490870728DC6C8B7B33F160329B443143FD7A06ED0E028A1B9715652F50B42A9DF1D99BDD9F59D5D8D0923267C0582654E3DB239C04638FF8B5C9430AE24236D720531C1759342A8172B95F6D06FE126C6915FF1551CD137244011D32083EC6F4B7B047002BC9BEDEF2AFD773D3D39E70E362EAC463235CCD5063A0B33F12F58026E54D1656C907426DA6995E991398A2162F2EBD2CEBDF2FBD74EC1CBD61818AB41B3B71F3A641C4A7A6B10E7F405014AC08EBDCB7FBAE5627BBA38A8D890BFF40B0907F3BDCAD309ED84C85F6F4831AC7BB72729DF1E87CF70F11318494CFB09C85C63FF36D9AD8AF1E6A7D5B16BA7D292F822ABBB2BA59679B510CF97931FD6C685A2EA92D13D6BF31920CA604EA27C053D7F7C42127A270D77F29EC98E63D19E9A44212D9E6477D4B2ECB59F8A87EBADB2BBE9CEF7A9F0DBB63D801891DF003EA603D919EB220927F889EE8F6B48F6E31E568200F6E749ACE91A8E9F58E171E51D76544BBCDFB1ABD5E94D033BD411998B1D83BAD8C60F5FDB80A032921C72BCB562E7C9C5E284E2194337092812F03CC8AA2B554B115E557CF220CA6464CD543F007BE11D522ABE8F3B76A7D9D518C65E06B66178FF2C174AF41712A0983CFA1351CD06D9D0629EF1D80303481285BE6E888F87868434495E6AE04B305C521D444F65319907AB9119DDA1247E6703AB77449DD1C5631542935B847A081C0D7E80C841B52A5DF6338B9D8941D1E53A5BF95A64065D59F414E566B608CBAF5DBC9E30AD461EE5BF013E4AB4750F0C578576FC2BB4E87680FCE973870B2B53718EB306A9AE4C39E0D13B1F1C2CADDF3B7A3FA4AF8DAE073C1C046F36F8FAB17551B640F6F6ED80C82CAC3FCB2B9334AF773B6B4105FD9D1692A01A2930FB7AE09EA5D85E49CD5A2DACC8EF6273727BA54C399D522BDC5050EE02706E87261D148BE835BEA522064548DBFA17C4F314EFD3E0EC6D7A56AA5BE5509530B1C83EE0DE046E7938E8B955F5BAF5DC678C55EE154C42B7C3683CFE102C3D79BDB2377DE9CADC2B5402C648E13477F650A080E802F0059463D056B27BD9B84328DE61CCA4E1F1D564E419B84368AC3201209052BB6C3D87CFF5230CA318AFA460A1C5F7ABED71F1DDA6783AD870D79554E3DE92AA19175F67386D47AFF1BEE7985BACA0998E970F5FF73FF45B274C1D1C4A10C86F249FBD6830C121E583E1414FFCC5C43BADEAED7F1864DDB5EE58D47C8D9B8DC1CEA41F29D18C7B48D1289C2E9ECA8DAB1AE633E21E0E9418FBD32E91A210EC60AD6DD391A34074D5053A07954522465C62099B98D854AAE34F1FB787F92F3681D8195AB98F3473C73FE1ABB0214173C90544722EEA36C393E7844EA07656835371BBFB4B18AF1AA597C1D10A1E4BFFC9205AB5032AEDFED076499643C9724F26257B9A69FC53AF46747ECA1C2E5AAC3AB6F5BD0611817C915CA9F69480447291BE9DA844D5C0077C3A265D6C56B30139C03499C271035E9F99BB317999830957B84943C99F4616A495315937707110AE83B2EE327880D9911A07CE20FF7560852EAAE2B2001C68DAD3BFD054E53C8920D0DAAD3F347B24672F726A1AF181D7338673F5D183BD6F74492959742A9C08BE368A967B2EC7A74EFB7AFED87148CD3ABEC5A2DDA12AD9D61E66BBA0979E8D5CFFA45AC81C4992EF9E277593A92E02286817F5DDFE85B63157C702BB9C2BAB2429E7ACEBD0C7C0E9DBAE2B69219D40B19D21E7955739A7E24E61A6725C03798807A30FA0C0A79864E05700D6150B6E5D8931529312964617207A54EB6E715E8904B6528C140CF080CC23E87960D5512BB6BF1F8CDEB56A5DC3FF4BD9D33D829E3BE16AE20962EEE637F1530E3E1673CCE9217F2D8C8B02DC7B3091A8B6C980669E627E201C941C0E4FC9A067FD1EAB07317E3F2D3E75F94A318EF893ACECED817C017E8792828BE740BB6612CF5992EEA160EA638695E07E4BD8C5E38C2F47A650F6134EC6861C81D222FE3B741C9477265B650C2CD8E0472A54BAE679844911A4AA387EB5521C3900084C0D57DBD71042F3118E2A1BF1DA45CD731A7C75EEEDC14670103B1A03A045A3CFAB2A9F43D4266426DD2B1812C93A4D020156EDAA78780A420932989FE8F2D7CFCF85BEC3B3F2EDB54AEDF747D306C2A988948D4871D944986E42693D6B67742A78AA2A9A6A354D00BE6DDCD2AD5191CAEFD7A204BB3970BB46B43EBE3BAB892C8E49A7ECD81BEAEE829B0523E5FA5AD95F7F658E56092FC09A6B7B53065093F0B6C90F3BDAF3A620897D20C66D364DC87157DB10F84DE9B22564E1F5EBDE34C43AFC2AFFFB37FA94173245EB4EA9AA21EF1346CD3DAE6581AE5C04F58FFF94CD0BD617AFAABF081F088270E4562A82AD15E570092024DE73E63FFE88EAE179D34CD7FF9FB6084D114FF3240B0A64689EB520E126FDC9C0624ED006306DCFE69174AF96558A508EA87EE824B590EB435F1CAAD959AF95C78BE80557D59DBED446C38E4C2CF2215B25043BD9ED3B9F678E3A271C03B69C6204164601F9FF39CE87F45412F386510ED5A889883A622E7E059516FC4A81BF1DC9D1ECCD27843786074C943F57785BF8666297E96FD4528C7FFB1F0E1E3F0D810AA40283E2B0E0169B94A56AD7062321A8AD2B99997CD33AF9B3D5F2EE1F7A2DED102693EC74B8224F46EEE50A9C3B41A5AFA429482DBC8019C5C6ADEA177908BD3EE31CDE99CCDD9733AF18C25C9826E6058AA0CF1A2F21201F5916A8DC36AE6A63322C0041A54CCC8C7F12D893CB4670606D1E500A5FF8EFD3EE4CEC20993AE65BE2B04FB59DC2E1F1A554F56756B302E4F285B07807A5897593DDF5EBBC2AC97D9966F6D908D73F5EAF0CC0C5C18245972D32CF2B72843B035967C4677C4CD7EAD438F0A765F29D35C3402DAEFACFA86DA4BEB06B5ECC04D218FE69B5147D18FC43576617F2FCFB517BC669F8D73F2802EE9257AA90568E793B1381B38441A6362DAD4C967936AF61FEBA6F687E9A83A3F2EE4BFDEEF25B0120C930E717A8F484E4E9CB2B7E294A2766BDB716751DD466D40D2A69B251AB68624CD75253C7D49ADEA91595E28720C8756DBEB16B040B605F48B7C77A02B16D1F74D87DA88BBDBF35C52A90CCEF286D67C1F89C94FD366DC4D02DA3D0C3703B73CBED76F7DF13024689C59892FA36AA680C33473F6B9ED64459C6F1FB2EEA1A64C97AE9688694E887D7BE5CFCA379A6B11CDD05B90914A5DFA1094FC8107A5F768E3D75616510D52EFB00EFF9439F6E28662F5FAA6A609C7BE96C98C2B9905E33D055BE40E1FCA69EF864F50201818FDD0A8CD6E0E505E6DBE09A6625A7CAA96FB9AFC21696FD1E1142EE1009CCE141F4E1E9E542D493597F61337CE9D3A2C62C218A8A328A09BAD909558E5CD040329F08003CD46D2BC4810A98EEBAC9F8BED230ECA081C2368EC6A7E03CECC5569A1F0AFD310488E71249B6B8491E5A29F7E58C67CBE4A5F9F414BDB569E947B02AE7C1A2A5F348D635599A90DCA40CEB94107FB953124EE8C355C31A63222CC31C0424DDCB4838C3030E2D0A0F8AA0485408F65FEB911791B0F5F31224940A68B4E2203DCC0A90810B43A965D15BAFE0436DFA8C8D03A622E5FFDEE72A11D0C4EDCEDFD2892A1F5BAA1CEEC77CF391C63F85E60714061E3C241A670C578DB4DBF366206AABA02CD17832893DD67E7E75065A5A72F787CBAE7523F32FF3C1D6A82657727B779DB2606229A9267AA401B61AC2773D21C48774BFC8ED58B41EC681156A2E677D11061364B06418A342DEA00CCD0BDB7C491B734783A5DB675760CD3EF4BDD78E7CD744443A4244EC318CBFD9910E99CCD07A28A83BC1DF0142AF5B8BD1ECAE0AF7B9A97406C00D630F185A01314048405A1D16702CC9BFA3103AA101A518DBB0651CEBB3D770A774B8DE6081424A0EBA2F10B962ADB0F725B1A984908B334BCB9116A25CF0E7BAAC42F1D6654300E48C11AA3496096F76B8BD681A6F49C14F47514D98716862917E0F3E1E103A284C89D6A55847EB774D925412633898AF99C2FB232D1469025BF262B567F29A05F4816FE8EEF5F02BAC46B289A9A3631866B1697BC7CB869C5873B980B16EF3A89F548F96C6903FE2598038E6274EA0C152F239FAC3D512BC21E292D18AC9FBB051FD20D0DA3D3C783A67CA957743544C95FFED4FFD2D1829B1B1E92F1D4AD63D848DC564EEF32283992C2AE3E5CB113F0C82915309D6544B097FBFBCDB2EC30C017B7499943F307CEA31FAEF399FB861D72F4A4C92C6532EFFAA36C7E3D7131E33D97FACFA8958E8A336E28D3FC90163C4B5B08082B633FE2465F01FE6A21B0357A05A608C889115A988D1D277641B76698FA53BB64977A22AA71729B1F52F7FEAAB38864AB0C68A7CC020FD85801CBFE698FB4FDE1BB9E41ECFCE6FBFE7BD2606B3693B7F8A59F4EE2973C0CCC4207D1AB647D17E6CB17B81476486B39F085E6EC6509F59C2D746E35931E9AF11992004B76887372239FFAF4523A77D62B96A8E79CF055513B4DAD709F88E0BCA22B2204833075790919950D54364229EA565756458756CA9134BF06E096D6ED98B6E688C705589A5F9C733528D3A3563C394A58E6F7DA6193475695E56AEA16D9C0268E3177F96CB6C90DE61D60913211EB6A1257154EF2CB3D271A442B2D350D4C21BB420B55234B4DFA38FC9F3C00024B4BA85B753A52916686F5DBFE711A65071D4BFE828821B36BCFCAC9CFD7619259E1468FEF8029622EFB9558E4FB7A0E3EFA7F13E2944087AA587A90BB175D5145B1692C0AA463AE3861355D9DA0C2AA07B517BB85252362A5570650AA9F4F10DA952CD04AD6CB76D499CFF99C3F98890AFB155B847AD155567B14F60FA4B2E7A5944A3C8A7019E5355A0E999651023A2638A3221C5D0C712C44D028D79F983E6F76FE1A8280032EC147565BEB2FB563D05F3EA6DD54164291EA6544D64E0D461D99CAC91C3D60CDB9B91C7311EC2018541CE4BFC2A669DB49B4CC6881B1516F5700771BA94AD44A9C53BDCDBEAC616DC0714AEB06588BA2D9122A7B2D5EBE5FD615AEFE720D72A038D21C622642A9B5C6A99468DB39A24BA79569D32766415300D59183789394257AE4329028FF286829EA0B03A1A1D1EA1FD2B10249D954A725EE33B0FE073755C2204F496CE05DCE5E686E8C805DAEBDC5F8710D69E3831051435E8582653169063004AA95596CA0BD9ABB680898425B94E8D2889976EEF4EE3876E13B21A2ADED5433C43A3620473446CE36BE3BA23552B854EABD10F2AC6F68586DEA5252DC7E0F20340F617F8A6DEF46B20837D9645C61AEF49A339ECF73CD324A8ED8D8AD5D625F4FAF4979969274C0212787C1319E81C64208129DEB18F69A4B3BC5B0930DB9B3138295F6BC900F8579C5C1A56594FCFD2B948F645CBE0C5759DF35D5E5A8F9A1C7193185360C2CC693A02598FD235AA874BF14DF270B275E1338422892723F81B1C537F5B356DD3474EA142618710016A8F0A0B4188219BCC4D010EA19A261BD13AA105B9C5F99F0E9221C0E5184026EC95A989E8BF0FBC38236C27CD308CCD795E416FEB0E7B4E752CDCA7047D7FA92EC577D2F66AF42CCFC02DF4459FA09C2165C12C4E8DC91926B3A3622E4F2D99718F6DA3C8FE1F6B74541AC28AD89441675B4BD578CFA659C22F323AD86F2E88F5A478BB7239CFDD08B768EAB0AF1DCF7D46E4B810B8774ED0DF12F109028655277139215EB0EBF0E016E740F82CFAA22BE71AF758A45DBA375287C6603DD1BBC0EDB51020D4641171B2202F0B9BCE94316439D5E035D0DD28D4CF2CD40DD16295AEB5CEBD14CF3A6FD1FDBB5D2BE209270B0159577C0475E8F1A4FABC4E77CE274D00E0A3961F66635A046192BEFE5426411CFFFFCD3B48B80E08C04C70C9C6A1913B9F41E40E5F1C2182030AD025A18FAD977ACE281C11D808625B51727C66F0F50F67AF8395126397F5065914C3454D171EAAD9201BE1D49F9A96952BA3CF06BF4C6315B53D50507368E7E5EEBA55822F1C3ECB31924FB1602F279608BC11E2BF672F2AF6F8FE8204106960DC340F679F20C177D3B7D549DD8EAD3AB37A8DCCA167B203BB4697DF1F437B3021E07401B6AAE11AFEFBAD3907651DA7748AF16E242A45BED90047AD725FA1981029BEE0AB7036305721CFBEA8245650BE8C02CB95E99F5ABBAB693CA2D8BF694CADCC2D79F180BF65A0BCABF407EFF8440C221852D900F775A56F259FFE0ABFBB41502E745C95080984D3B4D5C67617AB6BA7D9AB68B8290850B3C6906CDFF9AF0FCDD1FDCA7F4BD9A285398D3E854270DDFFB5B22420AB9DD0E9D90C1157A47D0E94103B6F08F156227AC66FF59DC58B2DE050A4B7EED7EC0691F5999893E8CF66A80933632A09C18E0A5B587E3AF59AB433E2208F88F80CE3653308E710B863F0F355CD760803D62A95A8F0E1418CA7EAC04952FB2462FBE1ED7A3BAADABB97105A5D7525C4337367ABE4DAE1A278E1860385A058B83D985EBEC1A9DDB6E94E23F7DFB3B048B880AA9A3F92D8B04EA1CD5B660B29711B68E95460DD39BA49883D28586552BF188616D3AF6AF34D599653D4B492FFC8B58B875E5B6497AA653705E43F8F65AD550CE5C92E25B522592E48F731097746C404214550D312E27F3698A2D284EFE2640E36C15C1691A6BB42D96079BA3CAAAD3AEF60EFF4EEBCF4A9E479C077FF0C7A2DF7893BA0E399C0D91AF6B0F8407255C1AD53CD9304F42D9C724449386DFB5612B93ABAF45F627C165F1EDDB2DB085623BFC59ABB9C9C3E3ED2B2ACAA92606E12948DE89A559CBEDEB82DEAB71507E054D94A68D58267E168C8334C2244166F23FDC8FCD3085BD0084F0EFBD94526C53A305A84D389767B0FE8A00D89628CBAAF43ECEA8BD9A325635E03BBB14E869B82F08F7EC79519F5C02C9056734464A313774A6637906EA837295343C433A68E4CE35ADE0BC8A4B245A237B6A15DABAFB6E10D87CDE6C9ED415D9CCF93056A3463B3F14B2B0A8FAD422E100082470E4050B68BAC675A39323EE69F655D4379A9283A2106C4DD4DE875DD9489024B96CC67144B0E3940BC69E4300AFA65AF4E26875FE920F8C51A53A037547221FCAD2BE944BA7A7A0222F37F4E5B14CDD8B81D5CDDFDF2EBC6B1E7CC95728166687497CD7CBD61F09911331EDC784EFBA1BE4202CACBE5EDFE7925C0ED2FC54E3C4F41F17B8E5661C8A61B9E68831AAB41185B50FB67A24D3464820A8F0FCBC51E59D60DE3FCD5E63FB56218C0EBD92BA9AA42027B5AAF5B3470BF2D61DD4E03281D07F54E1F7B02323C7338593E8D311A015E0FDDAF1034C35DD85DC00EDE3C9F29CFF51F705D22BBC915D2E526D50B10B7E1083584BAC60B1EC4335EC5807212CC460F61D0BD5AB5F4565FE676B74488340304A24D780C3CDA4CD754F95366FDFE42F76B3BC7BF534AC27125BCE226849D117E9578DBF5884402E9E59EE74655F4CD050DE4761218B4D73F8A977F833BBB3C0EE40BCA67C4D92B28D2671B84DEB6DA73092F29FE6ED7DFA4881E11D2CD474FB45CC569F78BD73D380C572E5087A555131E1797597ECB0F0213C4F8D9EE3A45292D7429F8E6AF1AA0E2067334F78139570C007F7FB3391C49A1F878CFFE004C743FEB273B911A2B8815D5435B09E06D1DBF58F2A07083979A256CF7391C77690ECFDBCD51E96EF23A385AF91A2412EFE0F8BB92E4184E486BF826DE328AE0DFABC1EFAB0E8C4548D16CFF9BD2FFAE1D0ED0BCAB6F9D71273AF7801F95E1C77FFBE2F4F462325C2FEB37C96FFE3B0FEA918392286E759A3FF65992C481C8D76FC1FF42A134056F981AB76F1420DD3352079FF0ED17790229A258054177F41E2035F31293F8DAE8D4D0A861DA1418000B30BE1D58375512C2D19CBAD78A1CA9190DDACC58F9705EB0AA76544C5B62D442987D7AD1A4083F845A16E4CC185E0C4C58CC5705C43D9FA3F2192DD6C4EC5F7699E6A02398FC803A957CD9D652ECDFE919299665A819F8D80E54DF298D911EFAEF01E746F2D80E7E32A732ECFB864549502148242A1DC9824547B07A785782B1DFF91C555407B2C75FA2F2E239D3E52CC2F7C054FC5C3D44FFA2A184F307E1A397331D2E3A341BEDB9FC8246293EBFBEF1509FE33C0AE77ECB4B635C8EFAEDAED192F86388D26E086BE64CD84348DD3CA42A89641D317FAE8F06902A278762BCE722C019AB76A739171B66968F9496BF3695BEA1EBBD48D081BD12399E4FA81783A05372407BB8418AFA83494530585580495DC31004A9B21D2E9B6B62FAEE9C120814918ED9C06AFC2F613137AB5D4D49B27B39F9CC9158E1B80DF1BB023CA439F4BB642C5DD7E68C3F0D671076830596C8ECE757D9698361031F04399428CA2CECA7B4FCDB4B566277C408CC279DE27067BF6EB039F4D5DC158F8F7B9262C16B765A4B518D46A712285EA11BC0A98207A1EB053B53C70FCEDDC698DD94AB806E96E4BE89DE53486B2FD8DBD909B639803CDE296AC541910EB3F20EA3E3C68D0D948AD1B0A76B64D4288BC3F34A8E11BA453102EAE2F1123AB1A6EB20A4503FA93F4A1C7FF1298819D0DB3F80EE72C4D2E090DC7DBB2D83DA53702C4949E08D191137F2D293DC1E62E8179309F8215FE50A88FEE7B73E54C8D224AF384F655A2D410CE8D7841CAF450424343C6D2991FD8CCC05A5FA2DD003BBBED7CE4639F491748CFB3C46FFDFC9755B8700C062EE9C7BEDB8F58F9CD66D3AA6375EF53BA86E3E8393B992552C6F66C131FF47313EBF14F8B5A0482F765C591532F00463CA3112F821E1D4AB7F8EF39909B16D78EDB68F0A18EE79FBD4D54CA9D6EED6EE243AD40B40DEDF84D3EB476DA15B1F4ED079CCCB669F292E38243AD3F1C615C6F27D1C4F817C0F1F8115AC8322CF815149581A9729D4241396B31994E069F15457FE55BEE49FFBEBE49C075F0DB331F34B82DFDFB1D92920AECC4E46149AF0704B8F1425F5FA23708F4E75BF8E9CD95A923F7D55FDAAB2A08AE88852B733D3B95A9F38D40FF34F9FF7DF8FF81C7D9C51C6FEA0361CFA2E5DACFD2AF654EA3B0EFA048C375DB266B89E0062A6E77F33EB409DF4EAA588E10DCEF3CBC4FAE1D7F66DD56C362C909C282986FFBD9B937D01D6C047D151FE0A374DE4B6B2E95DB90B10DD6E9DFC4A27FD5313007DB757A998A75C0A4509D862B417CF1078B63CAD539FD934E61ED59437ECCDE77CC1EF6C5AE018670543DF5A91CF20FDA22194205F406ED56C40B3ECBA9A434BF1BD6181A2E7DEE9A8BD0C6A65B7CA40EC273833D081BC00B499019D7654B541F1D2C6BE08BC2D1076F49FE1D655105E5D1A07556B4F5EE6FCAFAF75EBB3C8E0E9D6395F225CFFDB2CA3EDA4FF7D3F2EDFAB334F816EAA37C08DC3779E0C90D04CD901EE4E01D1047068E5DA26AC7D0ABD2023E323BCBF15C453B1BE049462552CBD18B2C615E81A01574948FFA3B123E1464B36471196DC2C06F2C10F6E25A6499A0472C2CDF4C3BF6D73DFA98CBB77F1CD9876DD0A25C07C3931944E8205963AD847327F150A0F653C7865706030EB8D8FCF4861E9B3E1CFD0944888E20A591A9F32C14D06E7D873E0B44FE09F22E9662D9720C911BEB3C6C46AA3C14FA118BED177976AA2FCCA7EB3EC36C32CDAFA6742646EA56B5319711798609423FFCDCD4581A11023E28D9D988C97477A48BC85F035D4A3AE63BCE9096C0EAC686B1E5ECCF6294BAD509C091D145814EA8AC6FE01A1E7A1C16060E4BD92DF1CF0CF46ED0FDA5BE7FE650452D1E2CB39450A900E7A2D3BB6E930C4BA8AAF86D038637E7AD2B4B29572D80694DB388F6648E9464F8277AE249BFAB5F6670E3ADC7B9A145989ED6AD62BF09E18408F4946D0561F15D64F7929B1F099461293F68F3D12436EBC270BFB73173FB66BCCB351B154F4765D25D86AF8CDBF1739EBD93CE535FA71FE1E2861833005FCD0D9CD26A48A60219DE4DE410A27FE595F724A6FA373A1A85F3A9795A484CC8A6960F43FC6079D317DCBAFCCB78C2F6F596ED8C5AB4D0742EFFA626F379EA8FA28602600070FE6DD330030C879177D56A58044BA786C824114BD6BC4F054545F130D91C79342E1BA1A6021C310411CF730C87AD22C297884487E1EDBF40D26D2BF6DB83266A8890451A6A6E0B762B783E430E682FD46B89177F848A00E7BD5B017EDFDEEFEA2A7DB66380C993369272A51700892C466DA6EDF4085017657770362305F50504D7450119E29CAA1F57894D27539142CF27BF9B2EEBAE76828A64C52941BCA94A9E5A19177BBF30C4391A18E88254381718DE60949505965EC68649E01038C98F6C5C2808E040744E23C53C3BEBE47BBBEF2127E5D6EDC6267F48F94DD8D9DB03E8D94497701F0FAE11BB419ABDD33DAF435F632461F664099A3345DB9FC5B7490EA1C1D86495CBECA1AFE1F5F109AEB141B8E1345CA56EC3907968775A9259F5CEFF9BA79AC97F7B133ED532AEE87E8C8DBB8678E8B192B9EBB32CCBF91B243EE839D7089D5448E5844DF8479BB6C6EF042C3F6824BD1ADFD31C1C02E1859FAC3D04BDF12746EFF4427FB8C57996964FE70AE09718DB48EF9FDDBCE3A26660797F990761135DFBB7D4C2CB50ECA252BCBC5152407AC87D228C1A6A82FD367C49DD7425C6C98E9190437A9014146A09BD6723623352AB6467A206EABF7B47E87AFA6905E3BC0574E06647530A10F77F8054533E7103171B21C1D4B800ACCC780D7E7E0439A68320B0AFB90BCFAA9AA7E109BED21204E02FADF94F0A3FA2BE04D3C862BEE81FBCF4198185929A8128AE3E49AF5BE8F935E37BE05B9564709C5CDB77AFBFC9578A47B729E4F09CB7D4431EE2D8C09A119D5BA1B9730D7A1D59127EA4FCD5BFC401E3287FAE40598204AE55739D0A802D2F35CE54EA496281E13C66817C937A0692BEAC907BA3567F34007FA2C675EF1B6EDD182EDD10FA5DE810A80DBA53FD50D1755508E7774D1D99B1120B721CF51DA51918BFB95431411BAE1EB1770D9EB39E7ABFB9D0D39FC69C2D26EE31E875554208093832E9C9C862BEB750F6B50B6F424EF531F7B8D0C11069373B5C4DD282F001803B096E3E12CB89AFC0688AEB6A3A1F4E01F64F852AE2C5CF5EC048B3BEA3F245C451012FA66C31AD8AB240A192375DF2E971CC819900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark%RBIEndFontSubset
/FuraMonoNerdFontComplete-Regular cguidfix
/F2.1/FuraMonoNerdFontComplete-Regular renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs3 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs4 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 sc
q
0 0 726 892 rc
0 892 m
726 892 l
726 0 l
0 0 l
h
f
/Cs2 SC
1 1 1 sc
-1134 1850 m
2268 1850 l
2268 -1024 l
-1134 -1024 l
h
-1134 1850 m
f
1.5 706.5 m
234.5 706.5 l
234.5 587.5 l
1.5 587.5 l
h
1.5 706.5 m
f
2 w
1 J
1 j
0.60000002 i
0.79607856 0.29411757 0.086274512 sc
1 0 0 -1 -162 959 cm
163.5 252.5 m
396.5 252.5 l
396.5 371.5 l
163.5 371.5 l
h
186.8 252.5 m
186.8 371.5 l
373.20001 371.5 m
373.20001 252.5 l
S
/Cs3 SC
0.74176258 0.21325301 0.073530436 sc
0 i
1 0 0 -1 118 647 cm
/F1.1[ 16 0 0 -16 0 0]sf
-88.199997 -40.5 m
(!"#$%&'\()[ 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 0.000000 ] xS
/F2.1[ 16 0 0 -16 0 0]sf
-88.199997 5.5 m
(!"#$%)[ 9.584000 9.584000 9.584000 9.584000 0.000000 ] xS
-88.199997 28.5 m
(&!&'\()[ 9.584000 9.584000 9.584000 9.584000 0.000000 ] xS
-88.199997 51.5 m
(\)*&!+'\()[ 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
491.5 703.5 m
724.5 703.5 l
724.5 562 l
491.5 562 l
h
491.5 703.5 m
f
0.60000002 i
0.14901966 0.54509801 0.82352942 sc
1 0 0 -1 -162 959 cm
653.5 255.5 m
886.5 255.5 l
886.5 397 l
653.5 397 l
h
676.79999 255.5 m
676.79999 397 l
863.20001 397 m
863.20001 255.5 l
S
/Cs3 SC
0.12754884 0.46265948 0.78231418 sc
0 i
1 0 0 -1 608 632.75 cm
/F1.1[ 16 0 0 -16 0 0]sf
-88.199997 -52 m
(%\)**'+#\()[ 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 0.000000 ] xS
/F2.1[ 16 0 0 -16 0 0]sf
-88.199997 -6 m
(!")[ 9.584000 0.000000 ] xS
-88.199997 17 m
(+,--\(.&)[ 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 0.000000 ] xS
-88.199997 40 m
(\(-\)!')[ 9.584000 9.584000 9.584000 9.584000 0.000000 ] xS
-88.199997 63 m
(\)*&!+'\(/!"#$%)[ 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 0.000000 ] xS
0.60000002 i
/Cs2 SC
0.82745105 0.21176466 0.50980395 sc
1 0 0 -1 -162 959 cm
672 385.5 m
645.336 385.5 582.75 348.5 495.75 327.5 c
415.33447 308.08936 314.20068 311.31927 257.89374 311.91937 c
S
0 i
CM
86.299934 647.02063 m
95.922264 643.48077 l
95.877235 650.6806 l
h
86.299934 647.02063 m
f
0 J
0 j
1 0 0 -1 -162 959 cm
248.29994 311.97937 m
257.92227 315.51926 l
257.87723 308.3194 l
h
248.29994 311.97937 m
S
1 1 1 sc
CM
491.5 516.5 m
724.5 516.5 l
724.5 375 l
491.5 375 l
h
491.5 516.5 m
f
1 J
1 j
0.60000002 i
0.14902 0.54509801 0.82352901 sc
1 0 0 -1 -162 959 cm
653.5 442.5 m
886.5 442.5 l
886.5 584 l
653.5 584 l
h
676.79999 442.5 m
676.79999 584 l
863.20001 584 m
863.20001 442.5 l
S
/Cs4 SC
0.14901996 0.54509759 0.8235293 sc
0 i
1 0 0 -1 608 445.75 cm
/F1.1[ 16 0 0 -16 0 0]sf
-88.199997 -52 m
(%\)**'+#\()[ 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 0.000000 ] xS
/F2.1[ 16 0 0 -16 0 0]sf
-88.199997 -6 m
(!")[ 9.584000 0.000000 ] xS
-88.199997 17 m
(+,--\(.&)[ 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 0.000000 ] xS
-88.199997 40 m
(\(-\)!')[ 9.584000 9.584000 9.584000 9.584000 0.000000 ] xS
-88.199997 63 m
(\)*&!+'\(/!"#$%)[ 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 0.000000 ] xS
0.60000002 i
/Cs2 SC
0.82745099 0.21176501 0.50980401 sc
1 0 0 -1 -162 959 cm
672 571 m
645.336 571 595.33331 400.66666 519.33331 357.66666 c
443.33334 314.66666 273.07059 312.06531 257.11475 311.92752 c
S
0 i
1 1 1 sc
CM
491.5 890.5 m
724.5 890.5 l
724.5 749 l
491.5 749 l
h
491.5 890.5 m
f
0.60000002 i
0.14901966 0.54509801 0.82352942 sc
1 0 0 -1 -162 959 cm
653.5 68.5 m
886.5 68.5 l
886.5 210 l
653.5 210 l
h
676.79999 68.5 m
676.79999 210 l
863.20001 210 m
863.20001 68.5 l
S
/Cs3 SC
0.12754884 0.46265948 0.78231418 sc
0 i
1 0 0 -1 608 819.75 cm
/F1.1[ 16 0 0 -16 0 0]sf
-88.199997 -52 m
(%\)**'+#\()[ 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 0.000000 ] xS
/F2.1[ 16 0 0 -16 0 0]sf
-88.199997 -6 m
(!")[ 9.584000 0.000000 ] xS
-88.199997 17 m
(+,--\(.&)[ 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 0.000000 ] xS
-88.199997 40 m
(\(-\)!')[ 9.584000 9.584000 9.584000 9.584000 0.000000 ] xS
-88.199997 63 m
(\)*&!+'\(/!"#$%)[ 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 0.000000 ] xS
0.60000002 i
/Cs2 SC
0.82745099 0.21176501 0.50980401 sc
1 0 0 -1 -162 959 cm
672 198 m
645.336 198 590 259 510 278 c
430 297 276.07425 313.06238 256.81155 311.93063 c
S
0 i
1 1 1 sc
CM
1.5 234 m
234.5 234 l
234.5 115 l
1.5 115 l
h
1.5 234 m
f
0.60000002 i
0.79607898 0.29411799 0.086274497 sc
1 0 0 -1 -162 959 cm
163.5 725 m
396.5 725 l
396.5 844 l
163.5 844 l
h
186.8 725 m
186.8 844 l
373.20001 844 m
373.20001 725 l
S
/Cs3 SC
0.74176002 0.21325 0.073530003 sc
0 i
1 0 0 -1 118 174.5 cm
/F1.1[ 16 0 0 -16 0 0]sf
-88.199997 -40.5 m
(!"#$%&'\()[ 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 0.000000 ] xS
/F2.1[ 16 0 0 -16 0 0]sf
-88.199997 5.5 m
(!"#$0)[ 9.584000 9.584000 9.584000 9.584000 0.000000 ] xS
-88.199997 28.5 m
(&!&'\()[ 9.584000 9.584000 9.584000 9.584000 0.000000 ] xS
-88.199997 51.5 m
(\)*&!+'\()[ 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
491.5 142.5 m
724.5 142.5 l
724.5 1 l
491.5 1 l
h
491.5 142.5 m
f
0.60000002 i
0.14902 0.54509801 0.82352901 sc
1 0 0 -1 -162 959 cm
653.5 816.5 m
886.5 816.5 l
886.5 958 l
653.5 958 l
h
676.79999 816.5 m
676.79999 958 l
863.20001 958 m
863.20001 816.5 l
S
/Cs4 SC
0.14901996 0.54509759 0.8235293 sc
0 i
1 0 0 -1 608 71.75 cm
/F1.1[ 16 0 0 -16 0 0]sf
-88.199997 -52 m
(%\)**'+#\()[ 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 0.000000 ] xS
/F2.1[ 16 0 0 -16 0 0]sf
-88.199997 -6 m
(!")[ 9.584000 0.000000 ] xS
-88.199997 17 m
(+,--\(.&)[ 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 0.000000 ] xS
-88.199997 40 m
(\(-\)!')[ 9.584000 9.584000 9.584000 9.584000 0.000000 ] xS
-88.199997 63 m
(\)*&!+'\(/!"#$0)[ 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 0.000000 ] xS
0.60000002 i
/Cs2 SC
0.82745099 0.21176501 0.50980401 sc
1 0 0 -1 -162 959 cm
672 946.5 m
627.75 946.5 554.25 929.75 492 884.33331 c
434.19382 842.15881 323.78598 791.36108 263.87482 784.32343 c
S
0 i
CM
92.293274 175.28938 m
101.64393 171.08398 l
102.10347 178.2693 l
h
92.293274 175.28938 m
f
0 J
0 j
1 0 0 -1 -162 959 cm
254.29327 783.71063 m
263.64392 787.91602 l
264.10349 780.73071 l
h
254.29327 783.71063 m
S
1 1 1 sc
CM
491.5 329.5 m
724.5 329.5 l
724.5 188 l
491.5 188 l
h
491.5 329.5 m
f
1 J
1 j
0.60000002 i
0.14902 0.54509801 0.82352901 sc
1 0 0 -1 -162 959 cm
653.5 629.5 m
886.5 629.5 l
886.5 771 l
653.5 771 l
h
676.79999 629.5 m
676.79999 771 l
863.20001 771 m
863.20001 629.5 l
S
/Cs4 SC
0.14901996 0.54509759 0.8235293 sc
0 i
1 0 0 -1 608 258.75 cm
/F1.1[ 16 0 0 -16 0 0]sf
-88.199997 -52 m
(%\)**'+#\()[ 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 0.000000 ] xS
/F2.1[ 16 0 0 -16 0 0]sf
-88.199997 -6 m
(!")[ 9.584000 0.000000 ] xS
-88.199997 17 m
(+,--\(.&)[ 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 0.000000 ] xS
-88.199997 40 m
(\(-\)!')[ 9.584000 9.584000 9.584000 9.584000 0.000000 ] xS
-88.199997 63 m
(\)*&!+'\(/!"#$0)[ 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 0.000000 ] xS
0.60000002 i
/Cs2 SC
0.82745099 0.21176501 0.50980401 sc
1 0 0 -1 -162 959 cm
672 759 m
645.336 759 585.5 752 505.5 771 c
431.56641 788.5592 320.90695 784.76624 263.89923 784.08997 c
S
0 i
CM
92.299919 174.97697 m
101.87457 171.3101 l
101.9248 178.50992 l
h
92.299919 174.97697 m
f
0 J
0 j
1 0 0 -1 -162 959 cm
254.29993 784.02301 m
263.87457 787.68988 l
263.9248 780.49005 l
h
254.29993 784.02301 m
S
ep
end
%%Trailer
%%EOF
